{"ast":null,"code":"var _jsxFileName = \"/Users/irinaabakumova/SOA/frontend/src/pages/TableCity.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'id',\n  label: 'ID',\n  minWidth: 50,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'area',\n  label: 'Area',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'metersAboveSeaLevel',\n  label: 'Meters Above Sea Level',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'government',\n  label: 'Government',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'governor',\n  label: 'Governor',\n  minWidth: 170,\n  align: 'right'\n}];\nvar Government = /*#__PURE__*/function (Government) {\n  Government[\"DESPOTISM\"] = \"DESPOTISM\";\n  Government[\"PATRIARCHY\"] = \"PATRIARCHY\";\n  Government[\"ETHNOCRACY\"] = \"ETHNOCRACY\";\n  return Government;\n}(Government || {});\nconst createCity = (id, name, coordinates, creationDate, area, capital, government, governor, population, metersAboveSeaLevel) => ({\n  id,\n  name,\n  coordinates,\n  creationDate,\n  area,\n  population,\n  metersAboveSeaLevel,\n  capital,\n  government,\n  governor\n});\nconst formatValue = value => {\n  if (value === null || value === undefined) {\n    return 'N/A'; // Обработка null и undefined\n  }\n  if (typeof value === 'number') {\n    return value.toLocaleString('en-US'); // Форматирование чисел\n  } else if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No'; // Преобразование булевых значений\n  } else if (value instanceof Date) {\n    return value.toLocaleDateString(); // Форматирование дат\n  } else if (typeof value === 'object') {\n    // Пример для Coordinates\n    if ('x' in value && 'y' in value) {\n      var _value$x;\n      return `(${(_value$x = value.x) !== null && _value$x !== void 0 ? _value$x : 0}, ${value.y})`; // Формат для Coordinates\n    }\n    // Пример для Human\n    if ('height' in value) {\n      var _value$height;\n      return `${(_value$height = value.height) !== null && _value$height !== void 0 ? _value$height : 'N/A'} cm`; // Формат для Human\n    }\n    return JSON.stringify(value); // Превратите объекты в строки\n  }\n  return String(value); // Преобразование других типов в строку\n};\nconst cities = [createCity('1', 'Sample City', {\n  x: 10,\n  y: 20\n}, new Date(), 250, true, Government.DESPOTISM, {\n  height: 180\n}, 500000, 300), createCity('2', 'Another City', {\n  y: 30\n}, new Date(), 550, false, Government.PATRIARCHY, {\n  height: 175\n}, undefined, undefined)\n// Добавьте больше городов по мере необходимости\n];\nexport default function TableCity() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  useEffect(() => {\n    const fetchCities = async () => {\n      const requestData = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CitiesRequest>\n<page>${page + 1}</page>\n<pageSize>${rowsPerPage}</pageSize>\n<SortingStrategy>\n    <sortingType>asc</sortingType>\n    <sortingColumn>id</sortingColumn>\n</SortingStrategy>\n<FilterStrategy>\n    <filterColumn>id</filterColumn>\n    <filterType>contains</filterType>\n    <filterValue>string</filterValue>\n</FilterStrategy>\n</CitiesRequest>`;\n      try {\n        const response = await axios.post('http://localhost:9991/api/city', requestData, {\n          headers: {\n            'Content-Type': 'application/xml'\n          }\n        });\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(response.data, \"application/xml\");\n        const fetchedCities = Array.from(xmlDoc.getElementsByTagName('City')).map(cityElement => {\n          var _cityElement$getEleme, _cityElement$getEleme2, _cityElement$getEleme3, _cityElement$getEleme4, _cityElement$getEleme5, _cityElement$getEleme6, _cityElement$getEleme7, _cityElement$getEleme8, _cityElement$getEleme9, _cityElement$getEleme10, _cityElement$getEleme11, _cityElement$getEleme12;\n          return {\n            id: cityElement.getElementsByTagName('id')[0].textContent || '',\n            name: cityElement.getElementsByTagName('name')[0].textContent || '',\n            coordinates: {\n              x: Number((_cityElement$getEleme = cityElement.getElementsByTagName('x')[0]) === null || _cityElement$getEleme === void 0 ? void 0 : _cityElement$getEleme.textContent) || 0,\n              // Значение по умолчанию\n              y: Number((_cityElement$getEleme2 = cityElement.getElementsByTagName('y')[0]) === null || _cityElement$getEleme2 === void 0 ? void 0 : _cityElement$getEleme2.textContent) || 0 // Значение по умолчанию\n            },\n            creationDate: new Date(((_cityElement$getEleme3 = cityElement.getElementsByTagName('creationDate')[0]) === null || _cityElement$getEleme3 === void 0 ? void 0 : _cityElement$getEleme3.textContent) || 0),\n            // установка значения по умолчанию\n            area: Number((_cityElement$getEleme4 = cityElement.getElementsByTagName('area')[0]) === null || _cityElement$getEleme4 === void 0 ? void 0 : _cityElement$getEleme4.textContent) || 0,\n            // Значение по умолчанию\n            population: Number((_cityElement$getEleme5 = cityElement.getElementsByTagName('population')[0]) === null || _cityElement$getEleme5 === void 0 ? void 0 : _cityElement$getEleme5.textContent) || 0,\n            // Значение по умолчанию\n            metersAboveSeaLevel: Number((_cityElement$getEleme6 = cityElement.getElementsByTagName('metersAboveSeaLevel')[0]) === null || _cityElement$getEleme6 === void 0 ? void 0 : _cityElement$getEleme6.textContent) || 0,\n            // Значение по умолчанию\n            capital: ((_cityElement$getEleme7 = cityElement.getElementsByTagName('capital')[0]) === null || _cityElement$getEleme7 === void 0 ? void 0 : _cityElement$getEleme7.textContent) === 'true',\n            government: ((_cityElement$getEleme8 = cityElement.getElementsByTagName('government')[0]) === null || _cityElement$getEleme8 === void 0 ? void 0 : _cityElement$getEleme8.textContent) || Government.DESPOTISM,\n            // Значение по умолчанию\n            governor: {\n              height: Number((_cityElement$getEleme9 = cityElement.getElementsByTagName('Human')[0]) === null || _cityElement$getEleme9 === void 0 ? void 0 : (_cityElement$getEleme10 = _cityElement$getEleme9.getElementsByTagName('height')[0]) === null || _cityElement$getEleme10 === void 0 ? void 0 : _cityElement$getEleme10.textContent) || 0,\n              birthday: new Date(((_cityElement$getEleme11 = cityElement.getElementsByTagName('Human')[0]) === null || _cityElement$getEleme11 === void 0 ? void 0 : (_cityElement$getEleme12 = _cityElement$getEleme11.getElementsByTagName('birthday')[0]) === null || _cityElement$getEleme12 === void 0 ? void 0 : _cityElement$getEleme12.textContent) || 0) // установка значения по умолчанию\n            }\n          };\n        });\n        setCities(fetchedCities);\n      } catch (error) {\n        console.error(\"Error fetching cities:\", error);\n      }\n    };\n    fetchCities();\n  }, [page, rowsPerPage]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: cities.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(city => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = city[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: [formatValue(value), \" \"]\n                }, column.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this);\n              })\n            }, city.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: cities.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(TableCity, \"XO3vxbXl4lfA6dhvIGgc0M3bacE=\");\n_c = TableCity;\nvar _c;\n$RefreshReg$(_c, \"TableCity\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","useEffect","useState","jsxDEV","_jsxDEV","columns","id","label","minWidth","align","format","value","toLocaleString","Government","createCity","name","coordinates","creationDate","area","capital","government","governor","population","metersAboveSeaLevel","formatValue","undefined","Date","toLocaleDateString","_value$x","x","y","_value$height","height","JSON","stringify","String","cities","DESPOTISM","PATRIARCHY","TableCity","_s","setCities","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","fetchCities","requestData","response","post","headers","parser","DOMParser","xmlDoc","parseFromString","data","fetchedCities","Array","from","getElementsByTagName","map","cityElement","_cityElement$getEleme","_cityElement$getEleme2","_cityElement$getEleme3","_cityElement$getEleme4","_cityElement$getEleme5","_cityElement$getEleme6","_cityElement$getEleme7","_cityElement$getEleme8","_cityElement$getEleme9","_cityElement$getEleme10","_cityElement$getEleme11","_cityElement$getEleme12","textContent","Number","birthday","error","console","sx","width","overflow","children","maxHeight","stickyHeader","column","style","fileName","_jsxFileName","lineNumber","columnNumber","slice","city","hover","role","tabIndex","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/irinaabakumova/SOA/frontend/src/pages/TableCity.tsx"],"sourcesContent":["import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\n\ninterface Column {\n  id: keyof City;  \n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\nconst columns: readonly Column[] = [\n  { id: 'id',\n    label: 'ID', \n    minWidth: 50, \n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  { id: 'name',\n    label: 'Name', \n    minWidth: 170, \n    align: 'right'\n  },\n  {\n    id: 'area',\n    label: 'Area',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'metersAboveSeaLevel',\n    label: 'Meters Above Sea Level',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'government',\n    label: 'Government',\n    minWidth: 170,\n    align: 'right',\n  },\n  {\n    id: 'governor',\n    label: 'Governor',\n    minWidth: 170,\n    align: 'right',\n  },\n];\n\ninterface City {\n    id: string;\n    name: string;\n    coordinates: Coordinates;\n    creationDate: Date;\n    area: number;\n    population?: number;\n    establishmentDate?: Date;\n    metersAboveSeaLevel?: number;\n    capital: boolean;\n    government: Government;\n    governor: Human;\n}\n\n\ninterface Coordinates {\n    x?: number;\n    y: number;\n}\n\nenum Government {\n    DESPOTISM = \"DESPOTISM\",\n    PATRIARCHY = \"PATRIARCHY\",\n    ETHNOCRACY = \"ETHNOCRACY\",\n}\n\ninterface Human{\n    height?: number;\n    birthday?: Date;\n}\n\nconst createCity = (\n    id: string,\n    name: string,\n    coordinates: Coordinates,\n    creationDate: Date,\n    area: number,\n    capital: boolean,\n    government: Government,\n    governor: Human,\n    population?: number,\n    metersAboveSeaLevel?: number,\n): City => ({\n    id,\n    name,\n    coordinates,\n    creationDate,\n    area,\n    population,\n    metersAboveSeaLevel,\n    capital,\n    government,\n    governor,\n});\n\nconst formatValue = (value: any) => {\n    if (value === null || value === undefined) {\n        return 'N/A'; // Обработка null и undefined\n    }\n    \n    if (typeof value === 'number') {\n        return value.toLocaleString('en-US'); // Форматирование чисел\n    } else if (typeof value === 'boolean') {\n        return value ? 'Yes' : 'No'; // Преобразование булевых значений\n    } else if (value instanceof Date) {\n        return value.toLocaleDateString(); // Форматирование дат\n    } else if (typeof value === 'object') {\n        // Пример для Coordinates\n        if ('x' in value && 'y' in value) {\n            return `(${value.x ?? 0}, ${value.y})`; // Формат для Coordinates\n        }\n        // Пример для Human\n        if ('height' in value) {\n            return `${value.height ?? 'N/A'} cm`; // Формат для Human\n        }\n        return JSON.stringify(value); // Превратите объекты в строки\n    }\n    \n    return String(value); // Преобразование других типов в строку\n};\n\n\nconst cities: City[] = [\n    createCity('1', 'Sample City', { x: 10, y: 20 }, new Date(), 250, true, Government.DESPOTISM, { height: 180 }, 500000, 300),\n    createCity('2', 'Another City', { y: 30 }, new Date(), 550, false, Government.PATRIARCHY, { height: 175 }, undefined, undefined),\n    // Добавьте больше городов по мере необходимости\n];\n\nexport default function TableCity() {\n    const [cities, setCities] = useState<City[]>([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    const fetchCities = async () => {\n        const requestData = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CitiesRequest>\n<page>${page + 1}</page>\n<pageSize>${rowsPerPage}</pageSize>\n<SortingStrategy>\n    <sortingType>asc</sortingType>\n    <sortingColumn>id</sortingColumn>\n</SortingStrategy>\n<FilterStrategy>\n    <filterColumn>id</filterColumn>\n    <filterType>contains</filterType>\n    <filterValue>string</filterValue>\n</FilterStrategy>\n</CitiesRequest>`;\n\n        try {\n            const response = await axios.post('http://localhost:9991/api/city', requestData, {\n                headers: {\n                    'Content-Type': 'application/xml',\n                },\n            });\n            \n            const parser = new DOMParser();\n            const xmlDoc = parser.parseFromString(response.data, \"application/xml\");\n            const fetchedCities: City[] = Array.from(xmlDoc.getElementsByTagName('City')).map(cityElement => ({\n                id: cityElement.getElementsByTagName('id')[0].textContent || '',\n                name: cityElement.getElementsByTagName('name')[0].textContent || '',\n                coordinates: {\n                    x: Number(cityElement.getElementsByTagName('x')[0]?.textContent) || 0, // Значение по умолчанию\n                    y: Number(cityElement.getElementsByTagName('y')[0]?.textContent) || 0, // Значение по умолчанию\n                },\n                creationDate: new Date(cityElement.getElementsByTagName('creationDate')[0]?.textContent || 0), // установка значения по умолчанию\n                area: Number(cityElement.getElementsByTagName('area')[0]?.textContent) || 0, // Значение по умолчанию\n                population: Number(cityElement.getElementsByTagName('population')[0]?.textContent) || 0, // Значение по умолчанию\n                metersAboveSeaLevel: Number(cityElement.getElementsByTagName('metersAboveSeaLevel')[0]?.textContent) || 0, // Значение по умолчанию\n                capital: cityElement.getElementsByTagName('capital')[0]?.textContent === 'true',\n                government: cityElement.getElementsByTagName('government')[0]?.textContent as Government || Government.DESPOTISM, // Значение по умолчанию\n                governor: {\n                    height: Number(cityElement.getElementsByTagName('Human')[0]?.getElementsByTagName('height')[0]?.textContent) || 0,\n                    birthday: new Date(cityElement.getElementsByTagName('Human')[0]?.getElementsByTagName('birthday')[0]?.textContent || 0), // установка значения по умолчанию\n                },\n            }));\n        \n            \n            setCities(fetchedCities);\n        } catch (error) {\n            console.error(\"Error fetching cities:\", error);\n        }\n    };\n\n    fetchCities();\n}, [page, rowsPerPage]);\n\n            \n\n\n\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {cities\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((city) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={city.id}>\n                            {columns.map((column) => {\n                                const value = city[column.id];\n                                return (\n                                    <TableCell key={column.id} align={column.align}>\n                                        {formatValue(value)} {/* Вызов функции форматирования здесь */}\n                                    </TableCell>\n                                );\n                            })}\n                        </TableRow>\n                    );\n                })}\n        </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={cities.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}