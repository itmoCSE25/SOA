{"ast":null,"code":"var _jsxFileName = \"/Users/irinaabakumova/SOA/frontend/src/Components/Buttons.tsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Buttons = ({\n  inputValue\n}) => {\n  const handleButtonClick = () => {\n    // Здесь может быть логика, если нужно передать дополнительные действия при нажатии\n    console.log(inputValue); // Для проверки текущего значения\n    // Вы можете вызывать fetchCities из TableCity или передать значение через контекст, если это необходимо\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleButtonClick,\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0433\\u043E\\u0440\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Buttons;\nexport default Buttons;\nvar _c;\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"names":["React","Button","Stack","jsxDEV","_jsxDEV","Buttons","inputValue","handleButtonClick","console","log","direction","spacing","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irinaabakumova/SOA/frontend/src/Components/Buttons.tsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\ninterface ButtonsProps {\n  inputValue: string;\n}\n\nconst Buttons: React.FC<ButtonsProps> = ({ inputValue }) => {\n  const handleButtonClick = () => {\n    // Здесь может быть логика, если нужно передать дополнительные действия при нажатии\n    console.log(inputValue);  // Для проверки текущего значения\n    // Вы можете вызывать fetchCities из TableCity или передать значение через контекст, если это необходимо\n};\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Button variant=\"outlined\" onClick={handleButtonClick}>Получить город</Button>\n    </Stack>\n  );\n}\nexport default Buttons;\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,OAA+B,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAC1D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC,CAAC,CAAE;IAC1B;EACJ,CAAC;EACC,oBACEF,OAAA,CAACF,KAAK;IAACQ,SAAS,EAAC,KAAK;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,eAChCR,OAAA,CAACH,MAAM;MAACY,OAAO,EAAC,UAAU;MAACC,OAAO,EAAEP,iBAAkB;MAAAK,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEZ,CAAC;AAAAC,EAAA,GAXKd,OAA+B;AAYrC,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}