{"ast":null,"code":"var _jsxFileName = \"/Users/irinaabakumova/Downloads/db-course-front/db-course-front/src/components/ResourcesTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { Form } from \"../components/Form\";\nimport ModalAddFlower from \"../Modal/modalAddFlower\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst typeResources = [{\n  value: 'water',\n  label: 'Вода'\n}, {\n  value: 'soil',\n  label: 'Почва'\n}, {\n  value: 'fertilizer',\n  label: 'Удобрение'\n}];\nconst optionWater = [{\n  value: 'crane',\n  label: 'Водопроводная'\n}, {\n  value: 'rainy',\n  label: 'Дождевая'\n}, {\n  value: 'mineral',\n  label: 'Минеральная'\n}, {\n  value: 'bottled',\n  label: 'Бутилированная'\n}, {\n  value: 'salty',\n  label: 'Соляная'\n}];\nconst optionSoil = [{\n  value: 'podzolic',\n  label: 'Известковая'\n}, {\n  value: 'clay',\n  label: 'Глинистая'\n}, {\n  value: 'sandy',\n  label: 'Песчаная'\n}, {\n  value: 'peat',\n  label: 'Торфяная'\n}];\nconst optionFertilizers = [{\n  value: 'ammophos',\n  label: 'Аммофос'\n}, {\n  value: 'nitrophoska',\n  label: 'Нитрофоска'\n}, {\n  value: 'nitroammophoska',\n  label: 'Нитроаммофоска'\n}, {\n  value: 'potassium_nitrate',\n  label: 'Селитра калийная'\n}, {\n  value: 'organic',\n  label: 'Органическое'\n}];\nconst setWaters = value => {\n  const foundOption = optionWater.find(c => c.value === value);\n  if (foundOption) {\n    const label = foundOption.label;\n    return label;\n  }\n  return '';\n};\nconst setSoils = value => {\n  const foundOption = optionSoil.find(c => c.value === value);\n  if (foundOption) {\n    const label = foundOption.label;\n    // Ваш код для использования label\n    return label;\n  }\n  return '';\n};\nconst setFertilizer = value => {\n  const foundOption = optionFertilizers.find(c => c.value === value);\n  if (foundOption) {\n    const label = foundOption.label;\n    return label;\n  }\n  return '';\n};\nconst setResTypes = (value, tr) => {\n  if (tr === \"water\") {\n    const foundOption = optionWater.find(c => c.value === value);\n    if (foundOption) {\n      const label = foundOption.label;\n      return label;\n    }\n  } else if (tr === \"soil\") {\n    const foundOption = optionSoil.find(c => c.value === value);\n    if (foundOption) {\n      const label = foundOption.label;\n      return label;\n    }\n  } else {\n    const foundOption = optionFertilizers.find(c => c.value === value);\n    if (foundOption) {\n      const label = foundOption.label;\n      return label;\n    }\n  }\n  return '';\n};\nconst setTypes = value => {\n  const foundOption = typeResources.find(c => c.value === value);\n  if (foundOption) {\n    const label = foundOption.label;\n    return label;\n  }\n  return '';\n};\nconst ResourcesTable = () => {\n  _s();\n  const navigate = useNavigate();\n  const [resourcesList, setResourcesList] = useState([]);\n  const [bestResources, setBestResourcesList] = useState([]);\n  const [waterList, setWaterList] = useState([]);\n  const [soilList, setSoilsList] = useState([]);\n  const [fertilizersList, setFertilizersList] = useState([]);\n  const [modalActive, setModalActive] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [resourceType, setResourceType] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [triger, setTriger] = useState(false);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/resources/100', {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      setResourcesList(response.data.userResourcesPage);\n      setWaterList([]);\n      setSoilsList([]);\n      setFertilizersList([]);\n      response.data.userResourcesPage.map((res, index) => {\n        if (res.type === \"water\") {\n          const foundOption = waterList.findIndex(a => a.resourceType == res.resourceType);\n          if (foundOption === -1) {\n            waterList.push(res);\n          } else {\n            waterList[foundOption].amount = res.amount;\n          }\n        } else if (res.type === \"soil\") {\n          const foundOption = soilList.findIndex(a => a.resourceType == res.resourceType);\n          if (foundOption === -1) {\n            soilList.push(res);\n          } else {\n            soilList[foundOption].amount = res.amount;\n          }\n        } else {\n          const foundOption = fertilizersList.findIndex(a => a.resourceType == res.resourceType);\n          if (foundOption === -1) {\n            fertilizersList.push(res);\n          } else {\n            fertilizersList[foundOption].amount = res.amount;\n          }\n        }\n      });\n      setWaterList(waterList);\n      setSoilsList(soilList);\n      setFertilizersList(fertilizersList);\n      console.log(response.data.userResourcesPage);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const fetchBestData = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/resources/100/best_environment', {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      setBestResourcesList(response.data.userResourcesPage);\n      response.data.userResourcesPage.map((res, index) => {\n        const foundOption = bestResources.findIndex(a => a.resourceType == res.resourceType);\n        if (foundOption === -1) {\n          bestResources.push(res);\n        } else {\n          bestResources[foundOption].amount = res.amount;\n        }\n      });\n      setBestResourcesList(bestResources);\n      console.log(response.data.userResourcesPage);\n    } catch (error) {}\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navigates\",\n      type: \"button\",\n      onClick: async () => {\n        navigate('/home');\n      },\n      children: \"\\u0426\\u0432\\u0435\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0420\\u0435\\u0441\\u0443\\u0440\\u0441\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"none\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\u0412\\u043E\\u0434\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\u041F\\u043E\\u0447\\u0432\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\u0423\\u0434\\u043E\\u0431\\u0440\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"resources\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: waterList.map(water => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: setWaters(water.resourceType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: water.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"../Image/edit.svg\").default,\n                    onClick: () => {\n                      setModalActive(true);\n                      setType(\"water\");\n                      setResourceType(water.resourceType);\n                      setAmount(water.amount);\n                      setId(water.userId);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this)]\n              }, water.type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"resources\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: soilList.map(soil => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: setSoils(soil.resourceType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: soil.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"../Image/edit.svg\").default,\n                    onClick: () => {\n                      setModalActive(true);\n                      setType(\"soil\");\n                      setResourceType(soil.resourceType);\n                      setAmount(soil.amount);\n                      setId(soil.userId);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 41\n                }, this)]\n              }, soil.type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"resources\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: fertilizersList.map(fertilizers => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: setFertilizer(fertilizers.resourceType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: fertilizers.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"../Image/edit.svg\").default,\n                    onClick: () => {\n                      setModalActive(true);\n                      setType(\"fertilizer\");\n                      setResourceType(fertilizers.resourceType);\n                      setAmount(fertilizers.amount);\n                      setId(fertilizers.userId);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 41\n                }, this)]\n              }, fertilizers.type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"butRes\",\n        type: \"button\",\n        onClick: async () => {\n          fetchBestData();\n          setTriger(true);\n        },\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u044E\\u0449\\u0438\\u0435 \\u0440\\u0443\\u0441\\u0443\\u0440\\u0441\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this), triger ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"resources\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: bestResources.map(type => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [setSoils(type.resourceType), setWaters(type.resourceType), setFertilizer(type.resourceType), \" \", setTypes(type.type)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: type.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 37\n            }, this)]\n          }, type.type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalAddFlower, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"tableAdd\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"in\",\n            children: setTypes(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: setResTypes(resourceType, type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"amount\",\n              type: \"text\",\n              value: amount,\n              pattern: \"\\\\d*\",\n              onChange: e => setAmount(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but\",\n            type: \"button\",\n            onClick: async () => {\n              try {\n                const response = await fetch('http://localhost:8080/api/resources/100', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    userId: id,\n                    amount,\n                    type,\n                    resourceType\n                  })\n                });\n                if (response.ok) {\n                  fetchData();\n                  fetchBestData();\n                } else {\n                  throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                const data = await response.json();\n                console.log(data);\n              } catch (e) {\n                console.log('Sending error', e);\n              } finally {\n                setModalActive(false);\n              }\n            },\n            children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    title: \"resources\",\n    handleClick: fetchData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 12\n  }, this);\n};\n_s(ResourcesTable, \"P2TXEKaDn/PMeTjm8+8CiyCIMRY=\", false, function () {\n  return [useNavigate];\n});\n_c = ResourcesTable;\nexport { ResourcesTable };\nvar _c;\n$RefreshReg$(_c, \"ResourcesTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","Form","ModalAddFlower","useNavigate","jsxDEV","_jsxDEV","typeResources","value","label","optionWater","optionSoil","optionFertilizers","setWaters","foundOption","find","c","setSoils","setFertilizer","setResTypes","tr","setTypes","ResourcesTable","_s","navigate","resourcesList","setResourcesList","bestResources","setBestResourcesList","waterList","setWaterList","soilList","setSoilsList","fertilizersList","setFertilizersList","modalActive","setModalActive","id","setId","amount","setAmount","resourceType","setResourceType","type","setType","triger","setTriger","fetchData","response","get","headers","data","userResourcesPage","map","res","index","findIndex","a","push","console","log","error","fetchBestData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","water","src","require","default","userId","soil","fertilizers","active","setActive","pattern","onChange","e","target","fetch","method","body","JSON","stringify","ok","Error","status","json","title","handleClick","_c","$RefreshReg$"],"sources":["/Users/irinaabakumova/Downloads/db-course-front/db-course-front/src/components/ResourcesTable.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios, {AxiosResponse} from 'axios';\nimport '../App.css';\nimport {Form} from \"../components/Form\";\nimport ModalAddFlower from \"../Modal/modalAddFlower\";\nimport {useNavigate} from \"react-router-dom\";\n\n\ninterface userResourcesPage {\n    \"userId\": string,\n    \"amount\": string,\n    \"type\": string,\n    \"resourceType\": string\n}\n\nconst typeResources = [\n    {\n        value: 'water',\n        label: 'Вода'\n    },\n    {\n        value: 'soil',\n        label: 'Почва'\n    },\n    {\n        value: 'fertilizer',\n        label: 'Удобрение'\n    }\n]\nconst optionWater = [\n    {\n        value: 'crane',\n        label: 'Водопроводная'\n    },\n    {\n        value: 'rainy',\n        label: 'Дождевая'\n    },\n    {\n        value: 'mineral',\n        label: 'Минеральная'\n    },\n    {\n        value: 'bottled',\n        label: 'Бутилированная'\n    },\n    {\n        value: 'salty',\n        label: 'Соляная'\n    }]\nconst optionSoil = [\n    {\n        value: 'podzolic',\n        label: 'Известковая'\n    },\n    {\n        value: 'clay',\n        label: 'Глинистая'\n    },\n    {\n        value: 'sandy',\n        label: 'Песчаная'\n    },\n    {\n        value: 'peat',\n        label: 'Торфяная'\n    }]\n\n\nconst optionFertilizers = [\n    {\n        value: 'ammophos',\n        label: 'Аммофос'\n    },\n    {\n        value: 'nitrophoska',\n        label: 'Нитрофоска'\n    },\n    {\n        value: 'nitroammophoska',\n        label: 'Нитроаммофоска'\n    },\n    {\n        value: 'potassium_nitrate',\n        label: 'Селитра калийная'\n    },\n    {\n        value: 'organic',\n        label: 'Органическое'\n    }\n]\n\nconst setWaters = (value: string) => {\n    const foundOption = optionWater.find(c => c.value === value);\n    if (foundOption) {\n        const label = foundOption.label;\n        return label;\n    }\n    return '';\n}\n\nconst setSoils = (value: string) => {\n    const foundOption = optionSoil.find(c => c.value === value);\n    if (foundOption) {\n        const label = foundOption.label;\n        // Ваш код для использования label\n        return label;\n    }\n    return '';\n}\n\nconst setFertilizer = (value: string) => {\n    const foundOption = optionFertilizers.find(c => c.value === value);\n    if (foundOption) {\n        const label = foundOption.label;\n        return label;\n    }\n    return '';\n}\nconst setResTypes = (value: string, tr: string) => {\n    if (tr === \"water\") {\n        const foundOption = optionWater.find(c => c.value === value);\n        if (foundOption) {\n            const label = foundOption.label;\n            return label;\n        }\n    } else if (tr === \"soil\") {\n        const foundOption = optionSoil.find(c => c.value === value);\n        if (foundOption) {\n            const label = foundOption.label;\n            return label;\n        }\n    } else {\n        const foundOption = optionFertilizers.find(c => c.value === value);\n        if (foundOption) {\n            const label = foundOption.label;\n            return label;\n        }\n    }\n    return '';\n}\nconst setTypes = (value: string) => {\n    const foundOption = typeResources.find(c => c.value === value);\n    if (foundOption) {\n        const label = foundOption.label;\n        return label;\n    }\n    return '';\n}\nconst ResourcesTable: React.FC = () => {\n    const navigate = useNavigate();\n    const [resourcesList, setResourcesList] = useState<userResourcesPage[]>([]);\n    const [bestResources, setBestResourcesList] = useState<userResourcesPage[]>([]);\n    const [waterList, setWaterList] = useState<userResourcesPage[]>([]);\n    const [soilList, setSoilsList] = useState<userResourcesPage[]>([]);\n    const [fertilizersList, setFertilizersList] = useState<userResourcesPage[]>([]);\n    const [modalActive, setModalActive] = useState(false);\n    const [id, setId] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [resourceType, setResourceType] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [triger, setTriger] = useState(false);\n\n\n    const fetchData = async () => {\n        try {\n            const response: AxiosResponse<{ userResourcesPage: userResourcesPage[] }> = await axios.get(\n                'http://localhost:8080/api/resources/100',\n                {\n                    headers: {'Access-Control-Allow-Origin': '*'},\n                }\n            );\n            setResourcesList(response.data.userResourcesPage\n            );\n            setWaterList([]);\n            setSoilsList([]);\n            setFertilizersList([]);\n            response.data.userResourcesPage.map((res, index) => {\n                if (res.type === \"water\") {\n                    const foundOption = waterList.findIndex(a => a.resourceType == res.resourceType);\n                    if (foundOption === -1) {\n                        waterList.push(res);\n                    } else {\n                        waterList[foundOption].amount = res.amount;\n                    }\n                } else if (res.type === \"soil\") {\n                    const foundOption = soilList.findIndex(a => a.resourceType == res.resourceType);\n                    if (foundOption === -1) {\n                        soilList.push(res);\n                    } else {\n                        soilList[foundOption].amount = res.amount;\n                    }\n                } else {\n                    const foundOption = fertilizersList.findIndex(a => a.resourceType == res.resourceType);\n                    if (foundOption === -1) {\n                        fertilizersList.push(res);\n                    } else {\n                        fertilizersList[foundOption].amount = res.amount;\n                    }\n                }\n            })\n            setWaterList(waterList);\n            setSoilsList(soilList);\n            setFertilizersList(fertilizersList);\n            console.log(response.data.userResourcesPage);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n    const fetchBestData = async () => {\n        try {\n            const response: AxiosResponse<{ userResourcesPage: userResourcesPage[] }> = await axios.get(\n                'http://localhost:8080/api/resources/100/best_environment',\n                {\n                    headers: {'Access-Control-Allow-Origin': '*'},\n                }\n            );\n            setBestResourcesList(response.data.userResourcesPage);\n\n            response.data.userResourcesPage.map((res, index) => {\n\n                const foundOption = bestResources.findIndex(a => a.resourceType == res.resourceType);\n                if (foundOption === -1) {\n                    bestResources.push(res);\n                } else {\n                    bestResources[foundOption].amount = res.amount;\n                }\n            })\n            setBestResourcesList(bestResources);\n            console.log(response.data.userResourcesPage);\n        } catch (error) {\n\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, []);\n    return (\n        <div className=\"body\">\n            <br/>\n            <button className=\"navigates\"\n                    type=\"button\"\n                    onClick={async () => {\n                        navigate('/home');\n                    }}>Цветы\n            </button>\n            <h1>Ресурсы</h1>\n            <table className=\"none\">\n                <tr>\n                    <td>\n                        Вода\n                    </td>\n                    <td>\n                        Почва\n                    </td>\n                    <td>\n                        Удобрения\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <table className=\"resources\">\n                            <thead>\n                            <tr>\n                                <th>\n                                    Название\n                                </th>\n                                <th>\n                                    Количество\n                                </th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                waterList.map((water) => (\n                                    <tr key={water.type}>\n                                        <td>{setWaters(water.resourceType)}</td>\n                                        <td>{water.amount}</td>\n                                        <td>\n                                            <img src={require(\"../Image/edit.svg\").default} onClick={() => {\n                                                setModalActive(true);\n                                                setType(\"water\");\n                                                setResourceType(water.resourceType);\n                                                setAmount(water.amount);\n                                                setId(water.userId);\n                                            }\n                                            }/>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </td>\n\n\n                    <td>\n                        <table className=\"resources\">\n                            <thead>\n                            <tr>\n                                <th>\n                                    Название\n                                </th>\n                                <th>\n                                    Количество\n                                </th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                soilList.map((soil) => (\n                                    <tr key={soil.type}>\n                                        <td>{setSoils(soil.resourceType)}</td>\n                                        <td>{soil.amount}</td>\n                                        <td>\n                                            <img src={require(\"../Image/edit.svg\").default} onClick={() => {\n                                                setModalActive(true);\n                                                setType(\"soil\");\n                                                setResourceType(soil.resourceType);\n                                                setAmount(soil.amount);\n                                                setId(soil.userId);\n                                            }\n                                            }/>\n                                        </td>\n                                    </tr>\n                                ))}\n\n                            </tbody>\n                        </table>\n\n                    </td>\n                    <td>\n                        <table className=\"resources\">\n                            <thead>\n                            <tr>\n                                <th>\n                                    Название\n                                </th>\n                                <th>\n                                    Количество\n                                </th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                fertilizersList.map((fertilizers) => (\n                                    <tr key={fertilizers.type}>\n                                        <td>{setFertilizer(fertilizers.resourceType)}</td>\n                                        <td>{fertilizers.amount}</td>\n                                        <td>\n                                            <img src={require(\"../Image/edit.svg\").default} onClick={() => {\n                                                setModalActive(true);\n                                                setType(\"fertilizer\");\n                                                setResourceType(fertilizers.resourceType);\n                                                setAmount(fertilizers.amount);\n                                                setId(fertilizers.userId);\n                                            }\n                                            }/>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </td>\n                </tr>\n                <button\n                    className=\"butRes\"\n\n                    type=\"button\"\n                    onClick={async () => {\n                        fetchBestData();\n                        setTriger(true);\n                    }}\n                >\n                    Показать недостающие русурсы\n                </button>\n                {triger? (\n                    <table className=\"resources\">\n                        <thead>\n                        <tr>\n                            <th>\n                                Название\n                            </th>\n                            <th>\n                                Количество\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            bestResources.map((type) => (\n                                <tr key={type.type}>\n                                    <td>{setSoils(type.resourceType)}{setWaters(type.resourceType)}{setFertilizer(type.resourceType)} {setTypes(type.type)}</td>\n\n                                    <td>{type.amount}</td>\n                                </tr>\n                            ))}\n\n                        </tbody>\n                    </table>\n                ) : (\n                    <p></p>\n                )}\n            </table>\n\n            <ModalAddFlower active={modalActive} setActive={setModalActive}>\n                <table className=\"tableAdd\">\n                    <tr>\n                        <h2 className=\"in\">\n                            {setTypes(type)}\n                        </h2>\n                    </tr>\n                    <tr>\n                        <td>\n                            {setResTypes(resourceType, type)}\n                        </td>\n                        <td>\n                            <input id=\"amount\" type=\"text\" value={amount} pattern=\"\\d*\"\n                                   onChange={(e) => setAmount(e.target.value)}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <button\n                            className=\"but\"\n                            type=\"button\"\n                            onClick={async () => {\n                                try {\n                                    const response = await fetch('http://localhost:8080/api/resources/100', {\n                                        method: 'POST',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify({\n                                            userId: id,\n                                            amount,\n                                            type,\n                                            resourceType\n                                        })\n                                    });\n                                    if (response.ok) {\n                                        fetchData();\n                                        fetchBestData();\n                                    } else {\n                                        throw new Error(`HTTP error! Status: ${response.status}`);\n                                    }\n                                    const data = await response.json();\n                                    console.log(data);\n                                } catch (e) {\n                                    console.log('Sending error', e);\n                                } finally {\n                                    setModalActive(false);\n                                }\n                            }}\n                        >\n                            Применить\n                        </button>\n                    </tr>\n                </table>\n\n            </ModalAddFlower>\n\n        </div>\n    );\n\n    return <Form title=\"resources\" handleClick={fetchData}/>;\n};\nexport {ResourcesTable};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}