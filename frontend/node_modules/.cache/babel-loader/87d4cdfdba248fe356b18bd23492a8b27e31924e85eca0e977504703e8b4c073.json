{"ast":null,"code":"var _jsxFileName = \"/Users/irinaabakumova/SOA/frontend/src/Components/TableCity.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Input from \"../Components/Input\";\nimport GetCityButton from \"./GetCityButton\";\nimport { Government } from '../models/Government';\nimport DeleteCityButton from './DeleteCityButton';\nimport PutCityButton from './PutCityButton';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'id',\n  label: 'ID',\n  minWidth: 50,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'area',\n  label: 'Area',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'metersAboveSeaLevel',\n  label: 'Meters Above Sea Level',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'government',\n  label: 'Government',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'governor',\n  label: 'Governor',\n  minWidth: 170,\n  align: 'right'\n}];\nconst formatValue = value => {\n  if (value === null || value === undefined) {\n    return 'N/A'; // Обработка null и undefined\n  }\n  if (typeof value === 'number') {\n    return value.toLocaleString('en-US'); // Форматирование чисел\n  } else if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No'; // Преобразование булевых значений\n  } else if (value instanceof Date) {\n    return value.toLocaleDateString(); // Форматирование дат\n  } else if (typeof value === 'object') {\n    // Пример для Coordinates\n    if ('x' in value && 'y' in value) {\n      var _value$x;\n      return `(${(_value$x = value.x) !== null && _value$x !== void 0 ? _value$x : 0}, ${value.y})`; // Формат для Coordinates\n    }\n    // Пример для Human\n    if ('height' in value) {\n      var _value$height;\n      return `${(_value$height = value.height) !== null && _value$height !== void 0 ? _value$height : 'N/A'} cm`; // Формат для Human\n    }\n    return JSON.stringify(value); // Превратите объекты в строки\n  }\n  return String(value); // Преобразование других типов в строку\n};\nconst TableCity = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleCityUpdate = newCity => {\n    setCities([newCity]); // Устанавливаем состояние, содержащим только новый город\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const handleInputChange = value => {\n    setInputValue(value);\n  };\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch(`http://localhost:9991/api/city/${inputValue}`, {\n        method: 'DELETE' // Указываем метод DELETE\n      });\n      if (response.ok) {\n        console.log('City successfully deleted');\n        fetchCities();\n      } else if (response.status === 400) {\n        console.error(\"Can't find city with such id\");\n      } else if (response.status >= 500) {\n        console.error('Internal server error');\n      }\n    } catch (error) {\n      console.error('Error deleting city:', error);\n    }\n  };\n  const fetchCities = async () => {\n    const requestData = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CitiesRequest>\n<page>${page + 1}</page>\n<pageSize>${rowsPerPage}</pageSize>\n<SortingStrategy>\n<sortingType>asc</sortingType>\n<sortingColumn>id</sortingColumn>\n</SortingStrategy>\n<FilterStrategy>\n<filterColumn>id</filterColumn>\n<filterType>contains</filterType>\n<filterValue>string</filterValue>\n</FilterStrategy>\n</CitiesRequest>`;\n    try {\n      const response = await axios.post('http://localhost:9991/api/city', requestData, {\n        headers: {\n          'Content-Type': 'application/xml'\n        }\n      });\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(response.data, \"application/xml\");\n      const fetchedCities = Array.from(xmlDoc.getElementsByTagName('cities')).map(cityElement => {\n        var _cityElement$getEleme, _cityElement$getEleme2, _cityElement$getEleme3, _cityElement$getEleme4, _cityElement$getEleme5, _cityElement$getEleme6, _cityElement$getEleme7, _cityElement$getEleme8, _cityElement$getEleme9, _cityElement$getEleme10, _cityElement$getEleme11, _cityElement$getEleme12;\n        return {\n          id: cityElement.getElementsByTagName('id')[0].textContent || '',\n          name: cityElement.getElementsByTagName('name')[0].textContent || '',\n          coordinates: {\n            x: Number((_cityElement$getEleme = cityElement.getElementsByTagName('x')[0]) === null || _cityElement$getEleme === void 0 ? void 0 : _cityElement$getEleme.textContent) || 0,\n            // Значение по умолчанию\n            y: Number((_cityElement$getEleme2 = cityElement.getElementsByTagName('y')[0]) === null || _cityElement$getEleme2 === void 0 ? void 0 : _cityElement$getEleme2.textContent) || 0 // Значение по умолчанию\n          },\n          creationDate: new Date(((_cityElement$getEleme3 = cityElement.getElementsByTagName('creationDate')[0]) === null || _cityElement$getEleme3 === void 0 ? void 0 : _cityElement$getEleme3.textContent) || 0),\n          // установка значения по умолчанию\n          area: Number((_cityElement$getEleme4 = cityElement.getElementsByTagName('area')[0]) === null || _cityElement$getEleme4 === void 0 ? void 0 : _cityElement$getEleme4.textContent) || 0,\n          // Значение по умолчанию\n          population: Number((_cityElement$getEleme5 = cityElement.getElementsByTagName('population')[0]) === null || _cityElement$getEleme5 === void 0 ? void 0 : _cityElement$getEleme5.textContent) || 0,\n          // Значение по умолчанию\n          metersAboveSeaLevel: Number((_cityElement$getEleme6 = cityElement.getElementsByTagName('metersAboveSeaLevel')[0]) === null || _cityElement$getEleme6 === void 0 ? void 0 : _cityElement$getEleme6.textContent) || 0,\n          // Значение по умолчанию\n          capital: ((_cityElement$getEleme7 = cityElement.getElementsByTagName('capital')[0]) === null || _cityElement$getEleme7 === void 0 ? void 0 : _cityElement$getEleme7.textContent) === 'true',\n          government: ((_cityElement$getEleme8 = cityElement.getElementsByTagName('government')[0]) === null || _cityElement$getEleme8 === void 0 ? void 0 : _cityElement$getEleme8.textContent) || Government.DESPOTISM,\n          // Значение по умолчанию\n          governor: {\n            height: Number((_cityElement$getEleme9 = cityElement.getElementsByTagName('Human')[0]) === null || _cityElement$getEleme9 === void 0 ? void 0 : (_cityElement$getEleme10 = _cityElement$getEleme9.getElementsByTagName('height')[0]) === null || _cityElement$getEleme10 === void 0 ? void 0 : _cityElement$getEleme10.textContent) || 0,\n            birthday: new Date(((_cityElement$getEleme11 = cityElement.getElementsByTagName('Human')[0]) === null || _cityElement$getEleme11 === void 0 ? void 0 : (_cityElement$getEleme12 = _cityElement$getEleme11.getElementsByTagName('birthday')[0]) === null || _cityElement$getEleme12 === void 0 ? void 0 : _cityElement$getEleme12.textContent) || 0) // установка значения по умолчанию\n          }\n        };\n      });\n      setCities(fetchedCities);\n    } catch (error) {\n      console.error(\"Error fetching cities:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchCities();\n  }, [page, rowsPerPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: inputValue,\n      onInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetCityButton, {\n      inputValue: inputValue,\n      onCityUpdate: handleCityUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleButtonClick,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0433\\u043E\\u0440\\u043E\\u04341\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteCityButton, {\n      inputValue: inputValue,\n      onCityUpdate: handleCityUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PutCityButton, {\n      inputValue: inputValue,\n      onCityUpdate: handleCityUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: cities.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(city => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = city[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: formatValue(value)\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 39\n                  }, this);\n                })\n              }, city.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: cities.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(TableCity, \"98kvdhmgDsJm4MRpM6odYWdJHa0=\");\n_c = TableCity;\nexport default TableCity;\nvar _c;\n$RefreshReg$(_c, \"TableCity\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","useEffect","useState","Input","GetCityButton","Government","DeleteCityButton","PutCityButton","Button","Stack","jsxDEV","_jsxDEV","columns","id","label","minWidth","align","format","value","toLocaleString","formatValue","undefined","Date","toLocaleDateString","_value$x","x","y","_value$height","height","JSON","stringify","String","TableCity","_s","cities","setCities","page","setPage","rowsPerPage","setRowsPerPage","inputValue","setInputValue","handleCityUpdate","newCity","handleChangePage","event","newPage","handleChangeRowsPerPage","target","handleInputChange","handleButtonClick","response","fetch","method","ok","console","log","fetchCities","status","error","requestData","post","headers","parser","DOMParser","xmlDoc","parseFromString","data","fetchedCities","Array","from","getElementsByTagName","map","cityElement","_cityElement$getEleme","_cityElement$getEleme2","_cityElement$getEleme3","_cityElement$getEleme4","_cityElement$getEleme5","_cityElement$getEleme6","_cityElement$getEleme7","_cityElement$getEleme8","_cityElement$getEleme9","_cityElement$getEleme10","_cityElement$getEleme11","_cityElement$getEleme12","textContent","name","coordinates","Number","creationDate","area","population","metersAboveSeaLevel","capital","government","DESPOTISM","governor","birthday","children","onInputChange","fileName","_jsxFileName","lineNumber","columnNumber","onCityUpdate","direction","spacing","variant","onClick","sx","width","overflow","maxHeight","stickyHeader","column","style","slice","city","hover","role","tabIndex","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/irinaabakumova/SOA/frontend/src/Components/TableCity.tsx"],"sourcesContent":["import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport Input from \"../Components/Input\";\nimport GetCityButton from \"./GetCityButton\";\nimport { City } from '../models/City'; \nimport { Government } from '../models/Government'; \nimport DeleteCityButton from './DeleteCityButton';\nimport PutCityButton from './PutCityButton';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\ninterface Column {\n  id: keyof City;  \n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\nconst columns: readonly Column[] = [\n  { id: 'id',\n    label: 'ID', \n    minWidth: 50, \n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  { id: 'name',\n    label: 'Name', \n    minWidth: 170, \n    align: 'right'\n  },\n  {\n    id: 'area',\n    label: 'Area',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'metersAboveSeaLevel',\n    label: 'Meters Above Sea Level',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'government',\n    label: 'Government',\n    minWidth: 170,\n    align: 'right',\n  },\n  {\n    id: 'governor',\n    label: 'Governor',\n    minWidth: 170,\n    align: 'right',\n  },\n];\n\n\nconst formatValue = (value: any) => {\n    if (value === null || value === undefined) {\n        return 'N/A'; // Обработка null и undefined\n    }\n    \n    if (typeof value === 'number') {\n        return value.toLocaleString('en-US'); // Форматирование чисел\n    } else if (typeof value === 'boolean') {\n        return value ? 'Yes' : 'No'; // Преобразование булевых значений\n    } else if (value instanceof Date) {\n        return value.toLocaleDateString(); // Форматирование дат\n    } else if (typeof value === 'object') {\n        // Пример для Coordinates\n        if ('x' in value && 'y' in value) {\n            return `(${value.x ?? 0}, ${value.y})`; // Формат для Coordinates\n        }\n        // Пример для Human\n        if ('height' in value) {\n            return `${value.height ?? 'N/A'} cm`; // Формат для Human\n        }\n        return JSON.stringify(value); // Превратите объекты в строки\n    }\n    \n    return String(value); // Преобразование других типов в строку\n};\n\nconst TableCity: React.FC = () => {\n  const [cities, setCities] = useState<City[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleCityUpdate = (newCity: City) => {\n    setCities([newCity]); // Устанавливаем состояние, содержащим только новый город\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  \n\n  const handleInputChange = (value: string) => {\n      setInputValue(value);\n  };\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch(`http://localhost:9991/api/city/${inputValue}`, {\n        method: 'DELETE', // Указываем метод DELETE\n      });\n\n      if (response.ok) {\n        console.log('City successfully deleted');\n        fetchCities();\n      } else if (response.status === 400) {\n        console.error(\"Can't find city with such id\");\n      } else if (response.status >= 500) {\n        console.error('Internal server error');\n      }\n    } catch (error) {\n      console.error('Error deleting city:', error);\n    }\n  };\n\n  const fetchCities = async () => {\n    const requestData = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CitiesRequest>\n<page>${page + 1}</page>\n<pageSize>${rowsPerPage}</pageSize>\n<SortingStrategy>\n<sortingType>asc</sortingType>\n<sortingColumn>id</sortingColumn>\n</SortingStrategy>\n<FilterStrategy>\n<filterColumn>id</filterColumn>\n<filterType>contains</filterType>\n<filterValue>string</filterValue>\n</FilterStrategy>\n</CitiesRequest>`;\n\n    try {\n        const response = await axios.post('http://localhost:9991/api/city', requestData, {\n            headers: {\n                'Content-Type': 'application/xml',\n            },\n        });\n        \n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(response.data, \"application/xml\");\n        const fetchedCities: City[] = Array.from(xmlDoc.getElementsByTagName('cities')).map(cityElement => ({\n            id: cityElement.getElementsByTagName('id')[0].textContent || '',\n            name: cityElement.getElementsByTagName('name')[0].textContent || '',\n            coordinates: {\n                x: Number(cityElement.getElementsByTagName('x')[0]?.textContent) || 0, // Значение по умолчанию\n                y: Number(cityElement.getElementsByTagName('y')[0]?.textContent) || 0, // Значение по умолчанию\n            },\n            creationDate: new Date(cityElement.getElementsByTagName('creationDate')[0]?.textContent || 0), // установка значения по умолчанию\n            area: Number(cityElement.getElementsByTagName('area')[0]?.textContent) || 0, // Значение по умолчанию\n            population: Number(cityElement.getElementsByTagName('population')[0]?.textContent) || 0, // Значение по умолчанию\n            metersAboveSeaLevel: Number(cityElement.getElementsByTagName('metersAboveSeaLevel')[0]?.textContent) || 0, // Значение по умолчанию\n            capital: cityElement.getElementsByTagName('capital')[0]?.textContent === 'true',\n            government: cityElement.getElementsByTagName('government')[0]?.textContent as Government || Government.DESPOTISM, // Значение по умолчанию\n            governor: {\n                height: Number(cityElement.getElementsByTagName('Human')[0]?.getElementsByTagName('height')[0]?.textContent) || 0,\n                birthday: new Date(cityElement.getElementsByTagName('Human')[0]?.getElementsByTagName('birthday')[0]?.textContent || 0), // установка значения по умолчанию\n            },\n        }));\n    \n        \n        setCities(fetchedCities);\n    } catch (error) {\n        console.error(\"Error fetching cities:\", error);\n    }\n};\n\n  useEffect(() => {  \n    fetchCities();\n}, [page, rowsPerPage]);\n\n  return (\n    <div>\n      <Input value={inputValue} onInputChange={handleInputChange} />\n      <GetCityButton inputValue={inputValue} onCityUpdate={handleCityUpdate}/>\n      <Stack direction=\"row\" spacing={2}>\n        <Button variant=\"outlined\" onClick={handleButtonClick}>Удалить город1</Button>\n      </Stack>\n  \n      <DeleteCityButton inputValue={inputValue} onCityUpdate={handleCityUpdate}/>\n      <PutCityButton inputValue={inputValue} onCityUpdate={handleCityUpdate}/>\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n        <TableContainer sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {cities\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((city) => {\n                      return (\n                          <TableRow hover role=\"checkbox\" tabIndex={-1} key={city.id}>\n                              {columns.map((column) => {\n                                  const value = city[column.id];\n                                  return (\n                                      <TableCell key={column.id} align={column.align}>\n                                          {formatValue(value)}\n                                      </TableCell>\n                                  );\n                              })}\n                          </TableRow>\n                      );\n                  })}\n          </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={cities.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n    \n  );\n}\nexport default TableCity;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}