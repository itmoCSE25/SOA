{"ast":null,"code":"var _jsxFileName = \"/Users/irinaabakumova/SOA/frontend/src/Components/GetGovernmentButton.tsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n// Импортируем City\n// Импортируем Government\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetGovernmentButton = ({\n  inputValue,\n  onCityUpdate\n}) => {\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch(`http://localhost:9991/api/external/government?type=${inputValue}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const xmlText = await response.text(); // Получите ответ в текстовом формате\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(xmlText, \"text/xml\"); // Парсим XML\n\n      const fetchedCities = Array.from(xmlDoc.getElementsByTagName('cities')).map(cityElement => {\n        var _cityElement$getEleme, _cityElement$getEleme2, _cityElement$getEleme3, _cityElement$getEleme4, _cityElement$getEleme5, _cityElement$getEleme6, _cityElement$getEleme7, _cityElement$getEleme8, _cityElement$getEleme9, _cityElement$getEleme10, _cityElement$getEleme11;\n        return {\n          id: cityElement.getElementsByTagName('id')[0].textContent || '',\n          name: cityElement.getElementsByTagName('name')[0].textContent || '',\n          coordinates: {\n            x: Number((_cityElement$getEleme = cityElement.getElementsByTagName('x')[0]) === null || _cityElement$getEleme === void 0 ? void 0 : _cityElement$getEleme.textContent) || 0,\n            y: Number((_cityElement$getEleme2 = cityElement.getElementsByTagName('y')[0]) === null || _cityElement$getEleme2 === void 0 ? void 0 : _cityElement$getEleme2.textContent) || 0\n          },\n          creationDate: new Date(((_cityElement$getEleme3 = cityElement.getElementsByTagName('creationDate')[0]) === null || _cityElement$getEleme3 === void 0 ? void 0 : _cityElement$getEleme3.textContent) || 0),\n          area: Number((_cityElement$getEleme4 = cityElement.getElementsByTagName('area')[0]) === null || _cityElement$getEleme4 === void 0 ? void 0 : _cityElement$getEleme4.textContent) || 0,\n          population: Number((_cityElement$getEleme5 = cityElement.getElementsByTagName('population')[0]) === null || _cityElement$getEleme5 === void 0 ? void 0 : _cityElement$getEleme5.textContent) || 0,\n          metersAboveSeaLevel: Number((_cityElement$getEleme6 = cityElement.getElementsByTagName('metersAboveSeaLevel')[0]) === null || _cityElement$getEleme6 === void 0 ? void 0 : _cityElement$getEleme6.textContent) || 0,\n          capital: ((_cityElement$getEleme7 = cityElement.getElementsByTagName('capital')[0]) === null || _cityElement$getEleme7 === void 0 ? void 0 : _cityElement$getEleme7.textContent) === 'true',\n          government: cityElement.getElementsByTagName('government')[0].textContent || '',\n          governor: {\n            height: Number((_cityElement$getEleme8 = cityElement.getElementsByTagName('Human')[0]) === null || _cityElement$getEleme8 === void 0 ? void 0 : (_cityElement$getEleme9 = _cityElement$getEleme8.getElementsByTagName('height')[0]) === null || _cityElement$getEleme9 === void 0 ? void 0 : _cityElement$getEleme9.textContent) || 0,\n            birthday: new Date(((_cityElement$getEleme10 = cityElement.getElementsByTagName('Human')[0]) === null || _cityElement$getEleme10 === void 0 ? void 0 : (_cityElement$getEleme11 = _cityElement$getEleme10.getElementsByTagName('birthday')[0]) === null || _cityElement$getEleme11 === void 0 ? void 0 : _cityElement$getEleme11.textContent) || 0)\n          },\n          human: Array.from(cityElement.getElementsByTagName('Human')).map(humanElement => {\n            var _humanElement$getElem, _humanElement$getElem2;\n            return {\n              height: Number((_humanElement$getElem = humanElement.getElementsByTagName('height')[0]) === null || _humanElement$getElem === void 0 ? void 0 : _humanElement$getElem.textContent) || 0,\n              birthday: new Date(((_humanElement$getElem2 = humanElement.getElementsByTagName('birthday')[0]) === null || _humanElement$getElem2 === void 0 ? void 0 : _humanElement$getElem2.textContent) || 0)\n            };\n          })\n        };\n      });\n\n      // Передаем полученный объект обратно в TableCity или другой компонент\n      onCityUpdate(fetchedCities);\n    } catch (error) {\n      console.error('Error fetching city data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleButtonClick,\n      children: \"\\u0413\\u043E\\u0440\\u043E\\u0434 c government \\u043C\\u0435\\u043D\\u044C\\u0448\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u043D\\u043E\\u0433\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = GetGovernmentButton;\nexport default GetGovernmentButton;\nvar _c;\n$RefreshReg$(_c, \"GetGovernmentButton\");","map":{"version":3,"names":["React","Button","Stack","jsxDEV","_jsxDEV","GetGovernmentButton","inputValue","onCityUpdate","handleButtonClick","response","fetch","ok","Error","xmlText","text","parser","DOMParser","xmlDoc","parseFromString","fetchedCities","Array","from","getElementsByTagName","map","cityElement","_cityElement$getEleme","_cityElement$getEleme2","_cityElement$getEleme3","_cityElement$getEleme4","_cityElement$getEleme5","_cityElement$getEleme6","_cityElement$getEleme7","_cityElement$getEleme8","_cityElement$getEleme9","_cityElement$getEleme10","_cityElement$getEleme11","id","textContent","name","coordinates","x","Number","y","creationDate","Date","area","population","metersAboveSeaLevel","capital","government","governor","height","birthday","human","humanElement","_humanElement$getElem","_humanElement$getElem2","error","console","direction","spacing","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irinaabakumova/SOA/frontend/src/Components/GetGovernmentButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { City } from '../models/City'; // Импортируем City\nimport { Government } from '../models/Government'; // Импортируем Government\n\ninterface ButtonsProps {\n  inputValue: string;\n  onCityUpdate: (city: City[]) => void; \n}\n\nconst GetGovernmentButton: React.FC<ButtonsProps> = ({ inputValue, onCityUpdate }) => {\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch(`http://localhost:9991/api/external/government?type=${inputValue}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const xmlText = await response.text(); // Получите ответ в текстовом формате\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(xmlText, \"text/xml\"); // Парсим XML\n\n      const fetchedCities: City[] = Array.from(xmlDoc.getElementsByTagName('cities')).map(cityElement => ({\n        id: cityElement.getElementsByTagName('id')[0].textContent || '',\n        name: cityElement.getElementsByTagName('name')[0].textContent || '',\n        coordinates: {\n            x: Number(cityElement.getElementsByTagName('x')[0]?.textContent) || 0, \n            y: Number(cityElement.getElementsByTagName('y')[0]?.textContent) || 0, \n        },\n        creationDate: new Date(cityElement.getElementsByTagName('creationDate')[0]?.textContent || 0), \n        area: Number(cityElement.getElementsByTagName('area')[0]?.textContent) || 0, \n        population: Number(cityElement.getElementsByTagName('population')[0]?.textContent) || 0, \n        metersAboveSeaLevel: Number(cityElement.getElementsByTagName('metersAboveSeaLevel')[0]?.textContent) || 0, \n        capital: cityElement.getElementsByTagName('capital')[0]?.textContent === 'true',\n        government: cityElement.getElementsByTagName('government')[0].textContent || '', \n        governor: {\n          height: Number(cityElement.getElementsByTagName('Human')[0]?.getElementsByTagName('height')[0]?.textContent) || 0,\n          birthday: new Date(cityElement.getElementsByTagName('Human')[0]?.getElementsByTagName('birthday')[0]?.textContent || 0), \n      },\n        human: Array.from(cityElement.getElementsByTagName('Human')).map(humanElement => ({\n          height: Number(humanElement.getElementsByTagName('height')[0]?.textContent) || 0,\n          birthday: new Date(humanElement.getElementsByTagName('birthday')[0]?.textContent || 0),\n      })),\n      \n    }));\n\n      // Передаем полученный объект обратно в TableCity или другой компонент\n      onCityUpdate(fetchedCities);\n      \n    } catch (error) {\n      console.error('Error fetching city data:', error);\n    }\n  };\n\n\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Button variant=\"outlined\" onClick={handleButtonClick}>Город c government меньше заданного</Button>\n    </Stack>\n  );\n}\nexport default GetGovernmentButton;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}