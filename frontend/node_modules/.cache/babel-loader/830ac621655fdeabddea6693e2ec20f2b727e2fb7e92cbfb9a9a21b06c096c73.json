{"ast":null,"code":"var _jsxFileName = \"/Users/irinaabakumova/SOA/frontend/src/pages/TableCity.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'id',\n  label: 'ID',\n  minWidth: 50\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'area',\n  label: 'Area',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'metersAboveSeaLevel',\n  label: 'Meters Above Sea Level',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'government',\n  label: 'Government',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'governor',\n  label: 'Governor',\n  minWidth: 170,\n  align: 'right'\n}];\nvar Government = /*#__PURE__*/function (Government) {\n  Government[\"DESPOTISM\"] = \"DESPOTISM\";\n  Government[\"PATRIARCHY\"] = \"PATRIARCHY\";\n  Government[\"ETHNOCRACY\"] = \"ETHNOCRACY\";\n  return Government;\n}(Government || {});\nconst createCity = (id, name, coordinates, creationDate, area, population, metersAboveSeaLevel, capital, government, governor) => ({\n  id,\n  name,\n  coordinates,\n  creationDate,\n  area,\n  population,\n  metersAboveSeaLevel,\n  capital,\n  government,\n  governor\n});\nconst cities = [createCity('1', 'Sample City', {\n  x: 10,\n  y: 20\n}, new Date(), 250, 500000, 300, true, Government.DESPOTISM, {\n  height: 180\n}), createCity('2', 'Another City', {\n  y: 30\n}, new Date(), 550, undefined, undefined, false, Government.PATRIARCHY, {\n  height: 175\n})\n// Добавьте больше городов по мере необходимости\n];\nexport default function TableCity() {\n  _s();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: cities.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(city => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = city[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: [formatValue(value), \" \"]\n                }, column.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this);\n              })\n            }, city.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: cities.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(TableCity, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n_c = TableCity;\nvar _c;\n$RefreshReg$(_c, \"TableCity\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","jsxDEV","_jsxDEV","columns","id","label","minWidth","align","format","value","toLocaleString","Government","createCity","name","coordinates","creationDate","area","population","metersAboveSeaLevel","capital","government","governor","cities","x","y","Date","DESPOTISM","height","undefined","PATRIARCHY","TableCity","_s","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","sx","width","overflow","children","maxHeight","stickyHeader","map","column","style","fileName","_jsxFileName","lineNumber","columnNumber","slice","city","hover","role","tabIndex","formatValue","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/irinaabakumova/SOA/frontend/src/pages/TableCity.tsx"],"sourcesContent":["import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n\ninterface Column {\n  id: keyof City;  \n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\nconst columns: readonly Column[] = [\n  { id: 'id', label: 'ID', minWidth: 50 },\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'area',\n    label: 'Area',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'metersAboveSeaLevel',\n    label: 'Meters Above Sea Level',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'government',\n    label: 'Government',\n    minWidth: 170,\n    align: 'right',\n  },\n  {\n    id: 'governor',\n    label: 'Governor',\n    minWidth: 170,\n    align: 'right',\n  },\n];\n\ninterface City {\n    id: string;\n    name: string;\n    coordinates: Coordinates;\n    creationDate: Date;\n    area: number;\n    population?: number;\n    establishmentDate?: Date;\n    metersAboveSeaLevel?: number;\n    capital: boolean;\n    government: Government;\n    governor: Human;\n}\n\n\ninterface Coordinates {\n    x?: number;\n    y: number;\n}\n\nenum Government {\n    DESPOTISM = \"DESPOTISM\",\n    PATRIARCHY = \"PATRIARCHY\",\n    ETHNOCRACY = \"ETHNOCRACY\",\n}\n\ninterface Human{\n    height?: number;\n    birthday?: Date;\n}\n\nconst createCity = (\n    id: string,\n    name: string,\n    coordinates: Coordinates,\n    creationDate: Date,\n    area: number,\n    population?: number,\n    metersAboveSeaLevel?: number,\n    capital: boolean,\n    government: Government,\n    governor: Human\n): City => ({\n    id,\n    name,\n    coordinates,\n    creationDate,\n    area,\n    population,\n    metersAboveSeaLevel,\n    capital,\n    government,\n    governor,\n});\n\n\nconst cities: City[] = [\n    createCity('1', 'Sample City', { x: 10, y: 20 }, new Date(), 250, 500000, 300, true, Government.DESPOTISM, { height: 180 }),\n    createCity('2', 'Another City', { y: 30 }, new Date(), 550, undefined, undefined, false, Government.PATRIARCHY, { height: 175 }),\n    // Добавьте больше городов по мере необходимости\n];\n\nexport default function TableCity() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {cities\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((city) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={city.id}>\n                            {columns.map((column) => {\n                                const value = city[column.id];\n                                return (\n                                    <TableCell key={column.id} align={column.align}>\n                                        {formatValue(value)} {/* Вызов функции форматирования здесь */}\n                                    </TableCell>\n                                );\n                            })}\n                        </TableRow>\n                    );\n                })}\n        </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={cities.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU9C,MAAMC,OAA0B,GAAG,CACjC;EAAEC,EAAE,EAAE,IAAI;EAAEC,KAAK,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAG,CAAC,EACvC;EAAEF,EAAE,EAAE,MAAM;EAAEC,KAAK,EAAE,MAAM;EAAEC,QAAQ,EAAE;AAAI,CAAC,EAC5C;EACEF,EAAE,EAAE,MAAM;EACVC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,GAAG;EACbC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,KAAa,IAAKA,KAAK,CAACC,cAAc,CAAC,OAAO;AACzD,CAAC,EACD;EACEN,EAAE,EAAE,YAAY;EAChBC,KAAK,EAAE,YAAY;EACnBC,QAAQ,EAAE,GAAG;EACbC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,KAAa,IAAKA,KAAK,CAACC,cAAc,CAAC,OAAO;AACzD,CAAC,EACD;EACEN,EAAE,EAAE,qBAAqB;EACzBC,KAAK,EAAE,wBAAwB;EAC/BC,QAAQ,EAAE,GAAG;EACbC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,KAAa,IAAKA,KAAK,CAACC,cAAc,CAAC,OAAO;AACzD,CAAC,EACD;EACEN,EAAE,EAAE,YAAY;EAChBC,KAAK,EAAE,YAAY;EACnBC,QAAQ,EAAE,GAAG;EACbC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,EAAE,EAAE,UAAU;EACdC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE,GAAG;EACbC,KAAK,EAAE;AACT,CAAC,CACF;AAAC,IAsBGI,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA,EAAVA,UAAU;AAWf,MAAMC,UAAU,GAAGA,CACfR,EAAU,EACVS,IAAY,EACZC,WAAwB,EACxBC,YAAkB,EAClBC,IAAY,EACZC,UAAmB,EACnBC,mBAA4B,EAC5BC,OAAgB,EAChBC,UAAsB,EACtBC,QAAe,MACP;EACRjB,EAAE;EACFS,IAAI;EACJC,WAAW;EACXC,YAAY;EACZC,IAAI;EACJC,UAAU;EACVC,mBAAmB;EACnBC,OAAO;EACPC,UAAU;EACVC;AACJ,CAAC,CAAC;AAGF,MAAMC,MAAc,GAAG,CACnBV,UAAU,CAAC,GAAG,EAAE,aAAa,EAAE;EAAEW,CAAC,EAAE,EAAE;EAAEC,CAAC,EAAE;AAAG,CAAC,EAAE,IAAIC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAEd,UAAU,CAACe,SAAS,EAAE;EAAEC,MAAM,EAAE;AAAI,CAAC,CAAC,EAC3Hf,UAAU,CAAC,GAAG,EAAE,cAAc,EAAE;EAAEY,CAAC,EAAE;AAAG,CAAC,EAAE,IAAIC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAEG,SAAS,EAAEA,SAAS,EAAE,KAAK,EAAEjB,UAAU,CAACkB,UAAU,EAAE;EAAEF,MAAM,EAAE;AAAI,CAAC;AAC/H;AAAA,CACH;AAED,eAAe,SAASG,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzC,KAAK,CAAC0C,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG5C,KAAK,CAAC0C,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMG,gBAAgB,GAAGA,CAACC,KAAc,EAAEC,OAAe,KAAK;IAC5DN,OAAO,CAACM,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAA0C,IAAK;IAC9EF,cAAc,CAAC,CAACE,KAAK,CAACG,MAAM,CAAChC,KAAK,CAAC;IACnCwB,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,oBACE/B,OAAA,CAACT,KAAK;IAACiD,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC/C3C,OAAA,CAACL,cAAc;MAAC6C,EAAE,EAAE;QAAEI,SAAS,EAAE;MAAI,CAAE;MAAAD,QAAA,eACrC3C,OAAA,CAACR,KAAK;QAACqD,YAAY;QAAC,cAAW,cAAc;QAAAF,QAAA,gBAC3C3C,OAAA,CAACJ,SAAS;UAAA+C,QAAA,eACR3C,OAAA,CAACF,QAAQ;YAAA6C,QAAA,EACN1C,OAAO,CAAC6C,GAAG,CAAEC,MAAM,iBAClB/C,OAAA,CAACN,SAAS;cAERW,KAAK,EAAE0C,MAAM,CAAC1C,KAAM;cACpB2C,KAAK,EAAE;gBAAE5C,QAAQ,EAAE2C,MAAM,CAAC3C;cAAS,CAAE;cAAAuC,QAAA,EAEpCI,MAAM,CAAC5C;YAAK,GAJR4C,MAAM,CAAC7C,EAAE;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKL,CACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZpD,OAAA,CAACP,SAAS;UAAAkD,QAAA,EACPvB,MAAM,CACFiC,KAAK,CAACvB,IAAI,GAAGG,WAAW,EAAEH,IAAI,GAAGG,WAAW,GAAGA,WAAW,CAAC,CAC3Da,GAAG,CAAEQ,IAAI,IAAK;YACX,oBACItD,OAAA,CAACF,QAAQ;cAACyD,KAAK;cAACC,IAAI,EAAC,UAAU;cAACC,QAAQ,EAAE,CAAC,CAAE;cAAAd,QAAA,EACxC1C,OAAO,CAAC6C,GAAG,CAAEC,MAAM,IAAK;gBACrB,MAAMxC,KAAK,GAAG+C,IAAI,CAACP,MAAM,CAAC7C,EAAE,CAAC;gBAC7B,oBACIF,OAAA,CAACN,SAAS;kBAAiBW,KAAK,EAAE0C,MAAM,CAAC1C,KAAM;kBAAAsC,QAAA,GAC1Ce,WAAW,CAACnD,KAAK,CAAC,EAAC,GAAC;gBAAA,GADTwC,MAAM,CAAC7C,EAAE;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEd,CAAC;cAEpB,CAAC;YAAC,GAR6CE,IAAI,CAACpD,EAAE;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAShD,CAAC;UAEnB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACjBpD,OAAA,CAACH,eAAe;MACd8D,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE;MAClCC,SAAS,EAAC,KAAK;MACfC,KAAK,EAAEzC,MAAM,CAAC0C,MAAO;MACrB7B,WAAW,EAAEA,WAAY;MACzBH,IAAI,EAAEA,IAAK;MACXiC,YAAY,EAAE5B,gBAAiB;MAC/B6B,mBAAmB,EAAE1B;IAAwB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ;AAACvB,EAAA,CA7DuBD,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}