{"ast":null,"code":"var _jsxFileName = \"/Users/irinaabakumova/SOA/frontend/src/Components/DeleteCityButton.tsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n// Импортируем City\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteCityButton = ({\n  inputValue,\n  onCityUpdate\n}) => {\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch(`http://localhost:9991/api/city/${inputValue}`, {\n        method: 'DELETE' // Указываем метод DELETE\n      });\n      if (response.ok) {\n        // Если сервер вернул успешный ответ, вы можете обработать это соответствующим образом\n        console.log('City successfully deleted');\n\n        // Предположим, что на сервере не возвращается объект города.\n        // В общем случае вам может понадобиться сообщение о том, что город был удален.\n      } else if (response.status === 400) {\n        // Если возникла ошибка 400\n        console.error(\"Can't find city with such id\");\n      } else if (response.status >= 500) {\n        // Если возникла ошибка сервера\n        console.error('Internal server error');\n      }\n    } catch (error) {\n      console.error('Error deleting city:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleButtonClick,\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0433\\u043E\\u0440\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = DeleteCityButton;\nexport default DeleteCityButton;\nvar _c;\n$RefreshReg$(_c, \"DeleteCityButton\");","map":{"version":3,"names":["React","Button","Stack","jsxDEV","_jsxDEV","DeleteCityButton","inputValue","onCityUpdate","handleButtonClick","response","fetch","method","ok","console","log","status","error","direction","spacing","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irinaabakumova/SOA/frontend/src/Components/DeleteCityButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport { City } from '../models/City'; // Импортируем City\n\ninterface ButtonsProps {\n  inputValue: string;\n  onCityUpdate: (city: City) => void; \n}\n\nconst DeleteCityButton: React.FC<ButtonsProps> = ({ inputValue, onCityUpdate }) => {\n    const handleButtonClick = async () => {\n        try {\n          const response = await fetch(`http://localhost:9991/api/city/${inputValue}`, {\n            method: 'DELETE', // Указываем метод DELETE\n          });\n    \n          if (response.ok) {\n            // Если сервер вернул успешный ответ, вы можете обработать это соответствующим образом\n            console.log('City successfully deleted');\n            \n            // Предположим, что на сервере не возвращается объект города.\n            // В общем случае вам может понадобиться сообщение о том, что город был удален.\n          } else if (response.status === 400) {\n            // Если возникла ошибка 400\n            console.error(\"Can't find city with such id\");\n          } else if (response.status >= 500) {\n            // Если возникла ошибка сервера\n            console.error('Internal server error');\n          }\n        } catch (error) {\n          console.error('Error deleting city:', error);\n        }\n      };\n\n\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Button variant=\"outlined\" onClick={handleButtonClick}>Удалить город</Button>\n    </Stack>\n  );\n}\nexport default DeleteCityButton;\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOvC,MAAMC,gBAAwC,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAC/E,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCJ,UAAW,EAAC,EAAE;QAC3EK,MAAM,EAAE,QAAQ,CAAE;MACpB,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;QAExC;QACA;MACF,CAAC,MAAM,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAClC;QACAF,OAAO,CAACG,KAAK,CAAC,8BAA8B,CAAC;MAC/C,CAAC,MAAM,IAAIP,QAAQ,CAACM,MAAM,IAAI,GAAG,EAAE;QACjC;QACAF,OAAO,CAACG,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAGL,oBACEZ,OAAA,CAACF,KAAK;IAACe,SAAS,EAAC,KAAK;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,eAChCf,OAAA,CAACH,MAAM;MAACmB,OAAO,EAAC,UAAU;MAACC,OAAO,EAAEb,iBAAkB;MAAAW,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEZ,CAAC;AAAAC,EAAA,GA/BKrB,gBAAwC;AAgC9C,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}